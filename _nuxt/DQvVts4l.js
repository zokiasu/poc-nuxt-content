import{z as p,I as u,J as D,K as O,A as B,i as M,L as P,M as E,N as H,u as R,O as S,P as V,Q as z}from"./BgX3BpPR.js";const K=r=>r==="defer"||r===!1;function T(...r){var g;const i=typeof r[r.length-1]=="string"?r.pop():void 0;typeof r[0]!="string"&&r.unshift(i);let[t,f,a={}]=r;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof f!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=p(),w=f,C=()=>u.value,b=()=>e.isHydrating?e.payload.data[t]:e.static.data[t];a.server??(a.server=!0),a.default??(a.default=C),a.getCachedData??(a.getCachedData=b),a.lazy??(a.lazy=!1),a.immediate??(a.immediate=!0),a.deep??(a.deep=u.deep),a.dedupe??(a.dedupe="cancel");const d=a.getCachedData(t,e),h=d!=null;if(!e._asyncData[t]||!a.immediate){(g=e.payload._errors)[t]??(g[t]=u.errorValue);const c=a.deep?D:O;e._asyncData[t]={data:c(h?d:a.default()),pending:D(!h),error:B(e.payload._errors,t),status:D("idle"),_default:a.default}}const s={...e._asyncData[t]};delete s._default,s.refresh=s.execute=(c={})=>{if(e._asyncDataPromises[t]){if(K(c.dedupe??a.dedupe))return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(c._initial||e.isHydrating&&c._initial!==!1){const l=c._initial?d:a.getCachedData(t,e);if(l!=null)return Promise.resolve(l)}s.pending.value=!0,s.status.value="pending";const o=new Promise((l,n)=>{try{l(w(e))}catch(y){n(y)}}).then(async l=>{if(o.cancelled)return e._asyncDataPromises[t];let n=l;a.transform&&(n=await a.transform(l)),a.pick&&(n=j(n,a.pick)),e.payload.data[t]=n,s.data.value=n,s.error.value=u.errorValue,s.status.value="success"}).catch(l=>{if(o.cancelled)return e._asyncDataPromises[t];s.error.value=H(l),s.data.value=R(a.default()),s.status.value="error"}).finally(()=>{o.cancelled||(s.pending.value=!1,delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=o,e._asyncDataPromises[t]},s.clear=()=>N(e,t);const _=()=>s.refresh({_initial:!0}),m=a.server!==!1&&e.payload.serverRendered;{const c=S();if(c&&m&&a.immediate&&!c.sp&&(c.sp=[]),c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const n=c._nuxtOnBeforeMountCbs;V(()=>{n.forEach(y=>{y()}),n.splice(0,n.length)}),z(()=>n.splice(0,n.length))}m&&e.isHydrating&&(s.error.value||d!=null)?(s.pending.value=!1,s.status.value=s.error.value?"error":"success"):c&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?c._nuxtOnBeforeMountCbs.push(_):a.immediate&&_();const o=E();if(a.watch){const n=M(a.watch,()=>s.refresh());o&&P(n)}const l=e.hook("app:data:refresh",async n=>{(!n||n.includes(t))&&await s.refresh()});o&&P(l)}const v=Promise.resolve(e._asyncDataPromises[t]).then(()=>s);return Object.assign(v,s),v}function N(r,i){i in r.payload.data&&(r.payload.data[i]=void 0),i in r.payload._errors&&(r.payload._errors[i]=u.errorValue),r._asyncData[i]&&(r._asyncData[i].data.value=void 0,r._asyncData[i].error.value=u.errorValue,r._asyncData[i].pending.value=!1,r._asyncData[i].status.value="idle"),i in r._asyncDataPromises&&(r._asyncDataPromises[i]&&(r._asyncDataPromises[i].cancelled=!0),r._asyncDataPromises[i]=void 0)}function j(r,i){const t={};for(const f of i)t[f]=r[f];return t}export{T as u};
